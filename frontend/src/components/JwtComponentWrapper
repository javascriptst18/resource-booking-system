import React, { Component } from 'react';
import JwtAuthenticator from './JwtAuthenticator';

export default function JwtComponentWrapper(JWTprotectedComponent) {

    const JWT_Auth_Instance = new JwtAuthenticator('http://localhost:5000');

    return class JWT_Protected extends Component {

        constructor() {
            super();
            this.state = {user: null}
        }
        componentWillMount() {
            if (!JWT_Auth_Instance.loggedIn()){
                this.props.history.replace('/login')
            }
            else { try { const profile = JWT_Auth_Instance.getProfile();
            this.setState({user: profile}) }
            
            catch(error){JWT_Auth_Instance.logout();
            this.props.history.replace('/login')}}
        }

        render() {
            if(this.state.user){return(<JWTprotectedComponent history={this.props.history} user={this.state.user}/>)}else{return null}
        }
    };
}
